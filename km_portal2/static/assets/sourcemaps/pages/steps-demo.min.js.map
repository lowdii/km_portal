{"version":3,"sources":["pages/steps-demo.js"],"names":["stepsDemo","_classCallCheck","this","init","handleValidations","handleSteps","trigger","isNextBtn","$","hasClass","to","parents","children","index","parent","$trigger","group","data","validate","groupId","attr","$groupStep","concat","parsley","on","formInstance","isValid","removeClass","addClass","toast","stepperDemo","next","document","querySelector","addEventListener","e","preventDefault","once","off","self","validateBy","prev","previous","whenValidate","selector","window","Stepper","linear"],"mappings":"uZAGMA,qBAEJ,SAAAA,IAAeC,gBAAAC,KAAAF,GAEbE,KAAKC,2DAOLD,KAAKE,oBACLF,KAAKG,iDAGKC,GACV,IAAMC,EAAYC,EAAEF,GAASG,SAAS,OAEhCC,GADOH,GAAmBC,EAAEF,GAASK,QAAQ,MAAMC,SAAS,WAAWC,QAClEN,EAAY,KAAOC,EAAEF,GAASQ,SAASD,SAC5CE,EAAWR,EAAYC,EAAEF,GAAWE,EAAEF,GAASK,QAAQ,MAAMC,SAAS,WACtEI,EAAQD,EAASE,OAAOC,SACxBC,EAAUJ,EAASJ,QAAQ,YAAYS,KAAK,MAC5CC,EAAad,EAAYC,EAAC,kBAAAc,OAAmBH,EAAnB,OAAkCJ,EAElEP,EAAE,iBACCe,UACAC,GAAG,gBAAiB,SAAUC,GAC7B,IAAMC,EAAUD,EAAaC,QAAQ,CACnCV,MAAOA,IAGTK,EAAWM,YAAY,iBAGnBD,GACFL,EAAWO,SAAS,WAEhBb,EAASN,SAAS,UACpBD,EAAE,mBAAmBqB,MAAM,QAElBtB,EACTuB,YAAYC,OAEZD,YAAYpB,GAAGA,KAGjBW,EAAWO,SAAS,SACpBI,SAASC,cAAc,YAAYC,iBAAiB,kBAAmB,SAAUC,GAC/EA,EAAEC,kBACD,CAAEC,MAAM,OAGdnB,SAAS,CACRF,MAAOA,IAIXR,EAAE,iBACCe,UACAe,IAAI,6DAIP,IAAMC,EAAOrC,KAEbM,EAAE,wBAAwBgB,GAAG,QAAS,WACpCe,EAAKC,WAAWtC,QAIlBM,EAAE,SAASgB,GAAG,QAAS,WACrB,IACML,EADWX,EAAEN,MACMS,QAAQ,YAAYS,KAAK,MAC5CC,EAAab,EAAC,kBAAAc,OAAmBH,EAAnB,OAEpBE,EAAWM,YAAY,iBACvBN,EAAWoB,OAAOd,YAAY,iBAE9BG,YAAYY,aAIdlC,EAAE,WAAWgB,GAAG,QAAS,WACvBhB,EAAE,iBACCe,UACAoB,aAAa,CACZ3B,MAAO,iBAKbR,EAAE,WAAWgB,GAAG,QAAS,WAGvB,OAFAe,EAAKC,WAAWtC,OAET,0CAKT,IAAM0C,EAAWZ,SAASC,cAAc,YACxCY,OAAOf,YAAc,IAAIgB,QAAQF,EAAU,CACzCG,QAAQ,aAUdvC,EAAEwB,UAAUR,GAAG,aAAc,WAC3B,IAAIxB","file":"../../javascript/pages/steps-demo.min.js","sourcesContent":["// Class Template\n// =============================================================\n\nclass stepsDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.handleValidations()\n    this.handleSteps()\n  }\n\n  validateBy (trigger) {\n    const isNextBtn = $(trigger).hasClass('btn')\n    const from = isNextBtn ? null : $(trigger).parents('ul').children('.active').index()\n    const to = isNextBtn ? null : $(trigger).parent().index()\n    const $trigger = isNextBtn ? $(trigger) : $(trigger).parents('ul').children('.active')\n    const group = $trigger.data().validate\n    const groupId = $trigger.parents('.content').attr('id')\n    const $groupStep = isNextBtn ? $(`[data-target=\"#${groupId}\"]`) : $trigger\n\n    $('#stepper-form')\n      .parsley()\n      .on('form:validate', function (formInstance) {\n        const isValid = formInstance.isValid({\n          group: group\n        })\n        // normalize states\n        $groupStep.removeClass('success error')\n\n        // give step item a validate state\n        if (isValid) {\n          $groupStep.addClass('success')\n          // go to next step or submit\n          if ($trigger.hasClass('submit')) {\n            $('#submitfeedback').toast('show')\n            console.log($('#stepper-form').serializeArray())\n          } else if (isNextBtn) {\n            stepperDemo.next()\n          } else {\n            stepperDemo.to(to)\n          }\n        } else {\n          $groupStep.addClass('error')\n          document.querySelector('#stepper').addEventListener('show.bs-stepper', function (e) {\n            e.preventDefault()\n          }, { once: true })\n        }\n      })\n      .validate({\n        group: group\n      })\n\n    // kill listener\n    $('#stepper-form')\n      .parsley()\n      .off('form:validate')\n  }\n\n  handleValidations () {\n    const self = this\n    // validate on next buttons\n    $('.next, .step-trigger').on('click', function () {\n      self.validateBy(this)\n    })\n\n    // prev buttons\n    $('.prev').on('click', function () {\n      const $trigger = $(this)\n      const groupId = $trigger.parents('.content').attr('id')\n      const $groupStep = $(`[data-target=\"#${groupId}\"]`)\n      // normalize states\n      $groupStep.removeClass('success error')\n      $groupStep.prev().removeClass('success error')\n\n      stepperDemo.previous()\n    })\n\n    // save creadit card\n    $('#savecc').on('click', () => {\n      $('#stepper-form')\n        .parsley()\n        .whenValidate({\n          group: 'creditcard'\n        })\n    })\n\n    // submit button\n    $('.submit').on('click', function () {\n      self.validateBy(this)\n\n      return false\n    })\n  }\n\n  handleSteps () {\n    const selector = document.querySelector('#stepper')\n    window.stepperDemo = new Stepper(selector, {\n      linear: false\n    })\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new stepsDemo()\n})\n"]}