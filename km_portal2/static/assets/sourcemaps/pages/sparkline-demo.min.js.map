{"version":3,"sources":["pages/sparkline-demo.js"],"names":["SparklineDemo","_classCallCheck","this","init","compositeLineChart","compositeChart","drawMouseSpeed","$","sparkline","fillColor","changeRangeMin","chartRangeMax","lineColor","Looper","colors","brand","teal","composite","pink","type","barColor","lastmousetime","lastmousex","lastmousey","mousetravel","mpoints","mousemove","e","mousex","pageX","mousey","pageY","Math","max","abs","setTimeout","mdraw","timenow","Date","getTime","pps","round","push","length","splice","width","tooltipSuffix","hexToRgba","document","on"],"mappings":"uZAGMA,yBAEJ,SAAAA,IAAeC,gBAAAC,KAAAF,GAEbE,KAAKC,2DAOLD,KAAKE,qBACLF,KAAKG,iBACLH,KAAKI,8DAILC,EAAE,kBAAkBC,UAAU,OAAQ,CACpCC,WAAW,EACXC,eAAgB,EAChBC,cAAe,GACfC,UAAWC,OAAOC,OAAOC,MAAMC,OAGjCT,EAAE,kBAAkBC,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAC1FS,WAAW,EACXR,WAAW,EACXG,UAAWC,OAAOC,OAAOC,MAAMG,KAC/BR,eAAgB,EAChBC,cAAe,8CAKjBJ,EAAE,iBAAiBC,UAAU,OAAQ,CACnCW,KAAM,MACNC,SAAUP,OAAOC,OAAOC,MAAMC,OAEhCT,EAAE,iBAAiBC,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CACzFS,WAAW,EACXR,WAAW,EACXG,UAAWC,OAAOC,OAAOC,MAAMG,gDAYjC,IAKIG,EAFAC,GAAc,EACdC,GAAc,EAEdC,EAAc,EACdC,EAAU,GAEdlB,EAAE,QAAQmB,UAAU,SAAUC,GAC5B,IAAIC,EAASD,EAAEE,MACXC,EAASH,EAAEI,OACG,EAAdT,IACFE,GAAeQ,KAAKC,IAAID,KAAKE,IAAIN,EAASN,GAAaU,KAAKE,IAAIJ,EAASP,KAE3ED,EAAaM,EACbL,EAAaO,IA2BfK,WAxBc,SAARC,IACJ,IACMC,GADK,IAAIC,MACIC,UACnB,GAAIlB,GAAiBA,GAAiBgB,EAAS,CAC7C,IAAIG,EAAMR,KAAKS,MAAMjB,GAAea,EAAUhB,GAAiB,KAC/DI,EAAQiB,KAAKF,GAtBG,GAwBZf,EAAQkB,QACVlB,EAAQmB,OAAO,EAAG,GAGpBpB,EAAc,EACdjB,EAAE,eAAeC,UAAUiB,EAAS,CAClCoB,MAAwB,EAAjBpB,EAAQkB,OACfG,cAAe,qBACflC,UAAWC,OAAOC,OAAOC,MAAMC,KAC/BP,UAAWI,OAAOkC,UAAUlC,OAAOC,OAAOC,MAAMC,KAAM,MAG1DK,EAAgBgB,EAChBF,WAAWC,EAtCY,MAAA,cAmD7B7B,EAAEyC,UAAUC,GAAG,aAAc,WAC3B,IAAIjD","file":"../../javascript/pages/sparkline-demo.min.js","sourcesContent":["// jQuery Sparkline Demo\n// =============================================================\n\nclass SparklineDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.compositeLineChart()\n    this.compositeChart()\n    this.drawMouseSpeed()\n  }\n\n  compositeLineChart () {\n    $('#compositeline').sparkline('html', {\n      fillColor: false,\n      changeRangeMin: 0,\n      chartRangeMax: 10,\n      lineColor: Looper.colors.brand.teal\n    })\n\n    $('#compositeline').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7], {\n      composite: true,\n      fillColor: false,\n      lineColor: Looper.colors.brand.pink,\n      changeRangeMin: 0,\n      chartRangeMax: 10\n    })\n  }\n\n  compositeChart () {\n    $('#compositebar').sparkline('html', {\n      type: 'bar',\n      barColor: Looper.colors.brand.teal\n    })\n    $('#compositebar').sparkline([4, 1, 5, 7, 9, 9, 8, 7, 6, 6, 4, 7, 8, 4, 3, 2, 2, 5, 6, 7], {\n      composite: true,\n      fillColor: false,\n      lineColor: Looper.colors.brand.pink\n    })\n  }\n\n  /**\n   ** Draw the little mouse speed animated graph\n   ** This just attaches a handler to the mousemove event to see\n   ** (roughly) how far the mouse has moved\n   ** and then updates the display a couple of times a second via\n   ** setTimeout()\n   **/\n  drawMouseSpeed () {\n    const self = this\n    const mrefreshinterval = 500 // update display every 500ms\n    const mpoints_max = 30\n    let lastmousex = -1\n    let lastmousey = -1\n    let lastmousetime\n    let mousetravel = 0\n    let mpoints = []\n\n    $('html').mousemove(function (e) {\n      let mousex = e.pageX\n      let mousey = e.pageY\n      if (lastmousex > -1) {\n        mousetravel += Math.max(Math.abs(mousex - lastmousex), Math.abs(mousey - lastmousey))\n      }\n      lastmousex = mousex\n      lastmousey = mousey\n    })\n\n    const mdraw = function () {\n      const md = new Date()\n      const timenow = md.getTime()\n      if (lastmousetime && lastmousetime != timenow) {\n        let pps = Math.round(mousetravel / (timenow - lastmousetime) * 1000)\n        mpoints.push(pps)\n\n        if (mpoints.length > mpoints_max) {\n          mpoints.splice(0, 1)\n        }\n\n        mousetravel = 0\n        $('#mousespeed').sparkline(mpoints, {\n          width: mpoints.length * 2,\n          tooltipSuffix: ' pixels per second',\n          lineColor: Looper.colors.brand.teal,\n          fillColor: Looper.hexToRgba(Looper.colors.brand.teal, .1)\n        })\n      }\n      lastmousetime = timenow\n      setTimeout(mdraw, mrefreshinterval)\n    }\n\n    // We could use setInterval instead, but I prefer to do it this way\n    setTimeout(mdraw, mrefreshinterval)\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new SparklineDemo()\n})\n"]}