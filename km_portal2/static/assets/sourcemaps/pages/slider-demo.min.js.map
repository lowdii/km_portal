{"version":3,"sources":["pages/slider-demo.js"],"names":["NouisliderDemo","_classCallCheck","this","init","colorpickerSlider","inputElementSlider","nonLinearSlider","lockingSlider","coloredSlider","keypressSlider","skippingStepSlider","hugeNumberSlider","keyboardSlider","datesSlider","softLimitSlider","setColor","color","concat","red","noUiSlider","get","green","blue","$resultElement","css","background","$","on","selector","$select","i","$option","text","val","append","$inputNumber","values","handle","value","Math","round","set","nodes","unencoded","isTap","positions","innerHTML","toFixed","selector1","selector2","$lockButton","$slider1Value","$slider2Value","lockedState","lockedValues","textContent","crossUpdate","slider","a","html","setLockedValues","Number","$connects","classes","each","addClass","inputs","setSliderHandle","r","forEach","input","e","position","step","steps","which","skipValues","$bigValueSpan","range","formater","wNumb","mark","thousand","prefix","to","$handle","attr","focus","weekdays","months","dateValues","date","Date","getDay","getDate","d","nth","getMonth","getFullYear","document"],"mappings":"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","file":"../../javascript/pages/slider-demo.min.js","sourcesContent":["// noUiSlider Demo\n// =============================================================\n\nclass NouisliderDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.colorpickerSlider()\n    this.inputElementSlider()\n    this.nonLinearSlider()\n    this.lockingSlider()\n    this.coloredSlider()\n    this.keypressSlider()\n    this.skippingStepSlider()\n    this.hugeNumberSlider()\n    this.keyboardSlider()\n    this.datesSlider()\n    this.softLimitSlider()\n  }\n\n  colorpickerSlider () {\n    const $resultElement = $('#ncp-result')\n    let red = $('#red')[0]\n    let green = $('#green')[0]\n    let blue = $('#blue')[0]\n\n    // The setColor function\n    const setColor = () => {\n      // Get the slider values, stick them together.\n      const color = `rgb(${red.noUiSlider.get()}, ${green.noUiSlider.get()}, ${blue.noUiSlider.get()})`\n      // Fill the color box.\n      $resultElement.css({\n        background: color,\n        color: color\n      })\n    }\n\n    // Bind the color changing function\n    // to the slide event.\n    red.noUiSlider.on('slide', setColor)\n    green.noUiSlider.on('slide', setColor)\n    blue.noUiSlider.on('slide', setColor)\n  }\n\n  inputElementSlider () {\n    // slider selector\n    const selector = $('#html5')[0]\n    // Appending <option> elements\n    const $select = $('#input-select')\n\n    // Append the option elements\n    for (let i = -20; i <= 40; i++){\n      const $option = $('<option />')\n      $option.text(i)\n      $option.val(i)\n\n      $select.append($option)\n    }\n\n    // Linking the <select> and <input>\n    const $inputNumber = $('#input-number')\n    selector.noUiSlider.on('update', (values, handle) => {\n      const value = values[handle]\n      if (handle) {\n        $inputNumber.val(value)\n      } else {\n        $select.val(Math.round(value))\n      }\n    })\n\n    $select.on('change', function () {\n      selector.noUiSlider.set([this.value, null])\n    })\n    $inputNumber.on('change', function () {\n      selector.noUiSlider.set([null, this.value])\n    })\n  }\n\n  nonLinearSlider () {\n    const selector = $('#nonlinear')[0]\n\n    // Read the slider value and the left offset\n    const nodes = [\n      $('#lower-value')[0], // 0\n      $('#upper-value')[0]  // 1\n    ]\n\n    // Display the slider value and how far the handle moved\n    // from the left edge of the slider.\n    selector.noUiSlider\n      .on('update', (values, handle, unencoded, isTap, positions) => {\n        nodes[handle].innerHTML = values[handle] + ', ' + positions[handle].toFixed(2) + '%'\n      })\n  }\n\n  lockingSlider () {\n    const selector1 = $('#slider1')[0]\n    const selector2 = $('#slider2')[0]\n    const $lockButton = $('#lockbutton')\n    const $slider1Value = $('#slider1-span')\n    const $slider2Value = $('#slider2-span')\n    let lockedState = false\n    let lockedValues = [60, 80]\n\n    // When the button is clicked, the locked\n    // state is inverted.\n    $lockButton.on('click', function () {\n      lockedState = !lockedState\n      this.textContent = lockedState ? 'Unlock' : 'Lock'\n    })\n\n    // The Crossupdate function\n    const crossUpdate = (value, slider) => {\n      // If the sliders aren't interlocked, don't\n      // cross-update.\n      if (!lockedState) return\n      // Select whether to increase or decrease\n      // the other slider value.\n      const a = selector1 === slider ? 0 : 1\n      const b = a ? 0 : 1\n      // Offset the slider value.\n      value -= lockedValues[b] - lockedValues[a]\n      // Set the value\n      slider.noUiSlider.set(value)\n    }\n\n    selector1.noUiSlider.on('update', (values, handle) => {\n      $slider1Value.html(values[handle])\n    })\n    selector2.noUiSlider.on('update', (values, handle) => {\n      $slider2Value.html(values[handle])\n    })\n\n    // Linking the sliders together\n    const setLockedValues = () => {\n      lockedValues = [\n        Number(selector1.noUiSlider.get()),\n        Number(selector2.noUiSlider.get())\n      ]\n    }\n\n    selector1.noUiSlider.on('change', setLockedValues)\n    selector2.noUiSlider.on('change', setLockedValues)\n    // The value will be send to the other slider,\n    // using a custom function as the serialization\n    // method. The function uses the global 'lockedState'\n    // variable to decide whether the other slider is updated.\n    selector1.noUiSlider.on('slide', (values, handle) => {\n      crossUpdate(values[handle], selector2)\n    })\n    selector2.noUiSlider.on('slide', (values, handle) => {\n      crossUpdate(values[handle], selector1)\n    })\n  }\n\n  coloredSlider () {\n    const $connects = $('#slider-color .noUi-connect')\n    const classes = ['bg-primary', 'bg-danger', 'bg-success', 'bg-warning']\n    $connects.each(function (i) {\n      $(this).addClass(classes[i])\n    })\n  }\n\n  keypressSlider () {\n    const selector = $('#keypress')[0]\n    const input0 = $('#input-with-keypress-0')\n    const input1 = $('#input-with-keypress-1')\n    const inputs = [input0, input1]\n\n    selector.noUiSlider.on('update', (values, handle) => {\n      inputs[handle].val(values[handle])\n    })\n\n    // Listen to keypress on the input\n    const setSliderHandle = (i, value) => {\n      const r = [null,null]\n      r[i] = value\n      selector.noUiSlider.set(r)\n    }\n\n    // Listen to keydown events on the input field.\n    inputs.forEach(function (input, handle) {\n      input.on('change', function () {\n        setSliderHandle(handle, this.value)\n      })\n\n      input.on('keydown', function (e) {\n        const values = selector.noUiSlider.get()\n        const value = Number(values[handle])\n        // [[handle0_down, handle0_up], [handle1_down, handle1_up]]\n        const steps = selector.noUiSlider.steps()\n        // [down, up]\n        const step = steps[handle]\n        let position\n        // 13 is enter,\n        // 38 is key up,\n        // 40 is key down.\n        switch ( e.which ) {\n          case 13:\n            setSliderHandle(handle, this.value)\n            break\n          case 38:\n            // Get step to go increase slider value (up)\n            position = step[1]\n            // false = no step is set\n            if ( position === false ) {\n              position = 1\n            }\n            // null = edge of slider\n            if ( position !== null ) {\n              setSliderHandle(handle, value + position)\n            }\n            break\n          case 40:\n            position = step[0]\n            if ( position === false ) {\n              position = 1\n            }\n            if ( position !== null ) {\n              setSliderHandle(handle, value - position)\n            }\n            break\n        }\n      })\n    })\n  }\n\n  skippingStepSlider () {\n    const selector = $('#skipstep')[0]\n    // Read the slider values\n    const skipValues = [\n      $('#skip-value-lower'),\n      $('#skip-value-upper')\n    ]\n\n    selector.noUiSlider.on('update', (values, handle) => {\n      skipValues[handle].html(values[handle])\n    })\n  }\n\n  hugeNumberSlider () {\n    const selector = $('#slider-huge')[0]\n    const $bigValueSpan = $('#huge-value')\n    // numbers.\n    const range = [0, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648, 4294967296, 8589934592]\n    const formater = wNumb({\n      mark: '.',\n      thousand: ',',\n      prefix: '$ '\n    })\n\n    selector.noUiSlider.on('update', (values, handle) => {\n      $bigValueSpan.html(formater.to(range[values[handle]]))\n    })\n  }\n\n  keyboardSlider () {\n    const selector = $('#keyboard')[0]\n    // Listen to keypress on the handle\n    const $handle = $('#keyboard .noUi-handle')\n\n    $handle.attr('tabindex', 0)\n    $handle\n      .on('click', function () {\n        this.focus()\n      })\n      .on('keydown', e => {\n        const value = Number(selector.noUiSlider.get())\n        switch (e.which) {\n          case 37: selector.noUiSlider.set(value - 10)\n            break\n          case 39: selector.noUiSlider.set(value + 10)\n            break\n        }\n      })\n  }\n\n  datesSlider () {\n    // Setup\n    const selector = $('#slider-date')[0]\n    // Helper functions and formatting\n    // Create a list of day and monthnames.\n    const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    // Append a suffix to dates.\n    // Example: 23 => 23rd, 1 => 1st.\n    const nth = function (d) {\n      if (d > 3 && d < 21) return 'th'\n      switch (d % 10) {\n        case 1:  return 'st'\n        case 2:  return 'nd'\n        case 3:  return 'rd'\n        default: return 'th'\n      }\n    }\n    // Create a string representation of the date.\n    const formatDate = function (date) {\n      return weekdays[date.getDay()] + ', ' + date.getDate() + nth(date.getDate()) + ' ' + months[date.getMonth()] + ' ' + date.getFullYear()\n    }\n    // Slider control\n    const dateValues = [\n      $('#event-start'),\n      $('#event-end')\n    ]\n\n    selector.noUiSlider.on('update', (values, handle) => {\n      dateValues[handle].html(formatDate(new Date(+values[handle])))\n    })\n  }\n\n  softLimitSlider () {\n    const selector = $('#slider-soft')[0]\n\n    // Resetting using the change event\n    selector.noUiSlider.on('change', (values, handle) => {\n      if (values[handle] < 20) {\n        selector.noUiSlider.set(20)\n      } else if (values[handle] > 80) {\n        selector.noUiSlider.set(80)\n      }\n    })\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new NouisliderDemo()\n})\n"]}