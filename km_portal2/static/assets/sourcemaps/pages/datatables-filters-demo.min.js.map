{"version":3,"sources":["pages/datatables-filters-demo.js"],"names":["AdvanceDataTablesDemo","_classCallCheck","this","init","table","globalSearch","columnSearch","selecter","clearSelected","addFilterRow","removeFilterRow","clearFilter","buttons","container","appendTo","unwrap","$","DataTable","dom","extend","autoPrint","language","paginate","previous","next","autoWidth","ajax","deferRender","order","columns","data","className","orderable","searchable","_","sort","search","columnDefs","targets","render","type","row","concat","id","img","name","self","on","e","value","val","length","clearSelectedRows","draw","document","filterRow","parents","column","find","operator","pattern","exp","arr","split","each","i","lastIndex","_loop","x","target","is","trigger","rowTmpl","children","first","clone","prop","append","$row","isRemovableRow","remove","modal","isChecked","getSelectedInfo","$selectors","$selectedRow","$info","$badge","addClass","text","prepend"],"mappings":"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","file":"../../javascript/pages/datatables-filters-demo.min.js","sourcesContent":["// Advance DataTables Demo\n// =============================================================\n\nclass AdvanceDataTablesDemo {\n\n  constructor () {\n\n    this.init()\n\n  }\n\n  init () {\n\n    // event handlers\n    this.table = this.table()\n    this.globalSearch()\n    this.columnSearch()\n    this.selecter()\n    this.clearSelected()\n\n    // filter columns\n    this.addFilterRow()\n    this.removeFilterRow()\n    this.clearFilter()\n\n    // add buttons\n    this.table\n      .buttons()\n      .container()\n      .appendTo('#dt-buttons')\n      .unwrap()\n  }\n\n  table () {\n    return $('#myTable').DataTable({\n      dom: `<'text-muted'Bi>\n        <'table-responsive'tr>\n        <'mt-4'p>`,\n      buttons: [\n        'copyHtml5',\n        { extend: 'print', autoPrint: false }\n      ],\n      language: {\n        paginate: {\n          previous: '<i class=\"fa fa-lg fa-angle-left\"></i>',\n          next: '<i class=\"fa fa-lg fa-angle-right\"></i>'\n        }\n      },\n      autoWidth: false,\n      ajax: 'assets/data/products.json',\n      deferRender: true,\n      order: [ 1, 'asc' ],\n      columns: [\n        { data: 'id', className: 'col-checker align-middle', orderable: false, searchable: false },\n        { data: { _: 'name', sort: 'name', search: 'name'}, className: 'align-middle' },\n        { data: 'inventory', className: 'align-middle' },\n        { data: 'variant', className: 'align-middle' },\n        { data: 'prices', className: 'align-middle' },\n        { data: 'sales', className: 'align-middle' },\n        { data: 'id', className: 'align-middle text-right', orderable: false, searchable: false }\n      ],\n      columnDefs: [{\n        targets: 0,\n        render: function (data, type, row, meta) {\n          return `<div class=\"custom-control custom-control-nolabel custom-checkbox\">\n            <input type=\"checkbox\" class=\"custom-control-input\" name=\"selectedRow[]\" id=\"p${row.id}\" value=\"${row.id}\">\n            <label class=\"custom-control-label\" for=\"p${row.id}\"></label>\n          </div>`\n        }\n      }, {\n        targets: 1,\n        render: function (data, type, row, meta) {\n          return `<a href=\"#${row.id}\" class=\"tile tile-img mr-1\">\n            <img class=\"img-fluid\" src=\"assets/images/dummy/img-${row.img}.jpg\" alt=\"Card image cap\">\n          </a>\n          <a href=\"#${row.id}\">${row.name}</a>`\n        }\n      }, {\n        targets: 6,\n        render: function (data, type, row, meta) {\n          return `<a class=\"btn btn-sm btn-icon btn-secondary\" href=\"#${data}\"><i class=\"fa fa-pencil-alt\"></i></a>\n          <a class=\"btn btn-sm btn-icon btn-secondary\" href=\"#${data}\"><i class=\"far fa-trash-alt\"></i></a>`\n        }\n      }]\n    })\n  }\n\n  globalSearch () {\n    const self = this\n\n    $('#table-search').on('keyup focus', function (e) {\n      let value = $('#table-search').val()\n\n      // clear selected rows\n      if (value.length && e.type === 'keyup') {\n        self.clearSelectedRows()\n      }\n\n      self.table\n        .search(value)\n        .draw()\n    })\n  }\n\n  columnSearch () {\n    const self = this\n\n    $(document).on('keyup change', '.filter-control', function (e) {\n      const filterRow = $(this).parents('.form-row')\n      const column = filterRow.find('.filter-column').val()\n      const value = filterRow.find('.filter-value').val()\n      const operator = value === '' ? 'contain' : filterRow.find('.filter-operator').val()\n      let pattern = value\n      let exp = ''\n\n      if (operator === 'notcontain') {\n        pattern = '^((?!'+ value +').)*$'\n      } else if (operator === 'equal') {\n        pattern = '^'+ value +'$'\n      } else if (operator === 'notequal') {\n        pattern = '^(?!'+ value +').*$'\n      } else if (operator === 'beginwith') {\n        pattern = '^('+ value + '| '+ value + ').*'\n      } else if (operator === 'endwith') {\n        pattern = '.*' + value + '$'\n      } else if (operator === 'greaterthan') {\n        const arr = value.split('')\n\n        $.each(arr, function (i, val) {\n          exp += '['+ val +'-9]'\n        })\n\n        pattern = '^('+ exp +'|[0-9][0-9]{'+ arr.length +',})*$'\n      } else if (operator === 'lessthan') {\n        const arr = value.split('')\n        const lastIndex = arr.length - 1\n\n        for (let x = 0; x < arr.length; x++) {\n          exp += x > 0 ? '|' : ''\n\n          $.each(arr, function (i, val) {\n            if (i <= x && x === lastIndex) {\n              exp += '[0-'+ val +']'\n            } if (i <= x && x < lastIndex) {\n              exp += '[0-9]'\n            }\n          })\n        }\n\n        pattern = '^('+ exp +')$'\n      }\n\n      // reset search term\n      if (e.type === 'change' && $(e.target).is('select')) {\n        filterRow.find('.filter-value').val('').trigger('keyup')\n      }\n\n      self.table\n        .column(column)\n        .search(pattern, true, true)\n        .draw()\n    })\n  }\n\n  addFilterRow () {\n    $('#add-filter-row').on('click', function () {\n      // get template from #filter-columns\n      let rowTmpl = $('#filter-columns')\n        .children()\n        .first()\n        .clone()\n\n      rowTmpl.find('select').prop('selectedIndex', 0)\n      rowTmpl.find('input').val('')\n\n      $('#filter-columns').append(rowTmpl)\n    })\n  }\n\n  removeFilterRow () {\n    const self = this\n    $(document).on('click', '.remove-filter-row', function () {\n      // get filter row\n      let $row = $(this).parents('.filter-row')\n      // clear search value\n      $row.find('.filter-value').val('').trigger('keyup')\n      // remove row\n      if (self.isRemovableRow()) {\n        $row.remove()\n      }\n    })\n  }\n\n  isRemovableRow () {\n    return $('#filter-columns').children().length > 1\n  }\n\n  clearFilter () {\n    const self = this\n\n    $(document).on('click', '#clear-filter', function () {\n      // hide modal\n      $('#modalFilterColumns').modal('hide')\n\n      // reset selects and input\n      $('#filter-columns').find('select').prop('selectedIndex', 0)\n      $('#filter-columns').find('input').val('')\n\n      // reset search term\n      self.table\n        .columns()\n        .search('')\n        .draw()\n    })\n  }\n\n  selecter () {\n    const self = this\n\n    $(document).on('change', '#check-handle', function () {\n      const isChecked = $(this).prop('checked')\n      $('input[name=\"selectedRow[]\"]').prop('checked', isChecked)\n\n      // get info\n      self.getSelectedInfo()\n    })\n    .on('change', 'input[name=\"selectedRow[]\"]', function () {\n      const $selectors = $('input[name=\"selectedRow[]\"]')\n      const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n      const prop = $selectedRow === $selectors.length\n        ? 'checked'\n        : 'indeterminate'\n\n      // reset props\n      $('#check-handle')\n        .prop('indeterminate', false)\n        .prop('checked', false)\n\n      if ($selectedRow) {\n        $('#check-handle').prop(prop, true)\n      }\n\n      // get info\n      self.getSelectedInfo()\n    })\n  }\n\n  clearSelected () {\n    const self = this\n    // clear selected rows\n    $('#myTable').on('page.dt', function () {\n      self.clearSelectedRows()\n    })\n    $('#clear-search').on('click', function () {\n      self.clearSelectedRows()\n    })\n  }\n\n  getSelectedInfo () {\n    const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n    const $info = $('.thead-btn')\n    const $badge = $('<span/>')\n      .addClass('selected-row-info text-muted pl-1')\n      .text(`${$selectedRow} selected`)\n    // remove existing info\n    $('.selected-row-info').remove()\n    // add current info\n    if ($selectedRow) {\n      $info.prepend($badge)\n    }\n  }\n\n  clearSelectedRows () {\n    $('#check-handle')\n      .prop('indeterminate', false)\n      .prop('checked', false)\n      .trigger('change')\n  }\n}\n\n\n/**\n * Keep in mind that your scripts may not always be executed after the theme is completely ready,\n * you might need to observe the `theme:load` event to make sure your scripts are executed after the theme is ready.\n */\n$(document).on('theme:init', () => {\n  new AdvanceDataTablesDemo()\n})\n"]}